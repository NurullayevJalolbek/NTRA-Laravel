services:
  ntra_nginx:
    container_name: ntra_nginx
    image: nginx:alpine  # Use the Nginx image
    ports:
      - "9090:80"  # Map port 8080 on the host to port 80 inside the container
    volumes:
      - ./:/var/www  # Mount the Laravel application directory
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Use our Nginx config
    depends_on:
      - ntra_app  # Ensure PHP-FPM is started before Nginx
    networks:
      - laravel-network  # Connect to the custom network

  ntra_app:
    container_name: ntra_app
    build: .  # Build from the Dockerfile
    depends_on:
      - ntra_db
    volumes:
      - ./:/var/www  # Mount the Laravel application directory
    networks:
      - laravel-network  # Connect to the custom network

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    expose:
      - 5432

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8081:80"
    networks:
      - app-network
  ntra_node:
    container_name: ntra_node
    image: node:20
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - laravel-network
    command: bash -c "npm install && npm run build"

# Define the custom network
networks:
  laravel-network: # Create a custom network named 'laravel-network'
    driver: bridge

# Define the volume for MySQL data persistence
volumes:
  rent_app_db:
